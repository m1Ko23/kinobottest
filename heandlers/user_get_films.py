import logging
from loader import dp, bot, admin_id
from aiogram import types
from myFilters.user import IsCode
from data.db import get_films, get_AllChennel, get_error_link_complaint_unix, update_error_link_complaint_unix, get_text
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from time import time
from keybord_s.ohter import ikb_close, ikb_close_oikb
from keybord_s.user import sub_list, kb_films
from datetime import datetime, timedelta
from aiogram.utils.callback_data import CallbackData

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# CallbackData –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
subscribed_callback = CallbackData("subscribed", "channel_id")

# –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –ø–æ –∫–æ–¥—É —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
@dp.message_handler(IsCode())
async def get_FimsWithCode(message: types.Message):
    logging.info(f'–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–∏–ª—å–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} —Å –∫–æ–¥–æ–º: {message.text}')
    await message.delete()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
    data_chennel = await get_AllChennel()
    for i in data_chennel:
        try:
            status = await bot.get_chat_member(chat_id=i[0], user_id=message.from_user.id)
            if status.status == 'left':
                # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–∞–Ω–∞–ª–∞–º–∏
                channels_kb = InlineKeyboardMarkup(row_width=1)
                for channel in data_chennel:
                    channels_kb.add(InlineKeyboardButton(text=channel[1], url=channel[2]))

                # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–π –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
                subscribe_button = ReplyKeyboardMarkup(resize_keyboard=True)
                subscribe_button.add(KeyboardButton(text="–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"))

                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏ –∫–∞–Ω–∞–ª–æ–≤ –∏ –æ–±—ã—á–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
                logging.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–∞–ª–æ–≤.')
                await message.answer(
                    '–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª(—ã)‚ùå\n–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è" –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—Éüëå',
                    reply_markup=channels_kb
                )
                await message.answer(
                    '–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è".',
                    reply_markup=subscribe_button
                )
                return
        except Exception as e:
            logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –Ω–∞ –∫–∞–Ω–∞–ª {i[0]}: {str(e)}')
            await bot.send_message(
                chat_id=admin_id,
                text=f'–ü–æ—Ö–æ–∂–µ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª —É–¥–∞–ª–∏–ª –Ω–∞—Å, –∑–∞–ø—É—Å—Ç–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∫—É –∫–∞–Ω–∞–ª–æ–≤"\n–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ–Ω—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–≤\n–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: {i[0]}\n–ù–∞–∑–≤–∞–Ω–∏–µ: {i[1]}\n–°—Å—ã–ª–∫–∞: {i[2]}\n–û—à–∏–±–∫–∞: {str(e)}',
                reply_markup=ikb_close.row(InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–Ω–∞–ª—ã‚öõÔ∏è', callback_data='check_chennel_admin'))
            )

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞ –ø–æ –∫–æ–¥—É
    film_data = await get_films(code=message.text)
    logging.info(f'–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º–∞ –¥–ª—è –∫–æ–¥–∞ {message.text}: {film_data}')
    
    if not film_data:
        logging.warning(f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ —Ñ–∏–ª—å–º–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {message.text}')
        await message.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ —Ñ–∏–ª—å–º–∞‚ùå\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
        return

    text_film = await get_text(type='text_text', text_type='film')
    text_film = text_film[0][0]
    me = await bot.get_me()
    text_film = str(text_film).replace('{username_bot}', me.mention)
    text_film = str(text_film).replace('{bot_id}', str(me.id))
    text_film = str(text_film).replace('{username}', message.from_user.mention)
    text_film = str(text_film).replace('{full_name}', message.from_user.full_name)
    text_film = str(text_film).replace('{user_id}', str(message.from_user.id)) 
    text_film = str(text_film).replace('{film_name}', film_data[0][1]) 
    text_film = str(text_film).replace('{film_code}', message.text) 
    
    ikb_films = await kb_films(name_films=film_data[0][1])
    logging.info(f'–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∏–ª—å–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}')
    await bot.send_photo(chat_id=message.from_user.id, photo=film_data[0][2], caption=text_film, reply_markup=ikb_films.row(ikb_close_oikb), parse_mode=types.ParseMode.HTML)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω–æ–π –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
@dp.message_handler(lambda message: message.text == "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è")
async def check_subscription(message: types.Message):
    logging.info(f'–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}')
    data_chennel = await get_AllChennel()

    for i in data_chennel:
        try:
            status = await bot.get_chat_member(chat_id=i[0], user_id=message.from_user.id)
            if status.status == 'left':
                logging.warning(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã.')
                await message.answer("–í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã‚ùå")
                return
        except Exception as e:
            logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –Ω–∞ –∫–∞–Ω–∞–ª {i[0]}: {str(e)}')
            await bot.send_message(
                chat_id=admin_id,
                text=f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –Ω–∞ –∫–∞–Ω–∞–ª {i[0]}: {str(e)}',
                reply_markup=ikb_close
            )

    # –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
    logging.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø–æ–¥–ø–∏—Å–∫—É.')
    await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å–º –∑–∞–Ω–æ–≤–æ.", reply_markup=types.ReplyKeyboardRemove())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–¥–Ω–∞ –∏–∑ —Å—Å—ã–ª–æ–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç‚ùì"
@dp.callback_query_handler(text='link_no_work')
async def Link_complaint(call: types.CallbackQuery):
    logging.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {call.from_user.id} –ø–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞ –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â—É—é —Å—Å—ã–ª–∫—É.')
    if await get_error_link_complaint_unix(user_id=call.from_user.id) is None or await get_error_link_complaint_unix(user_id=call.from_user.id) <= time():
        await call.message.answer('–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ—à–∏–±–∫—É‚òëÔ∏è', reply_markup=ikb_close)
        await bot.send_message(chat_id=admin_id, text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [{call.from_user.full_name}](tg://user?id={call.from_user.id}) –ø–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞ –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â—É—é —Å—Å—ã–ª–∫—É‚ùóÔ∏è', parse_mode=types.ParseMode.MARKDOWN, reply_markup=ikb_close.row(InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–Ω–∞–ª—ã‚öõÔ∏è', callback_data='check_chennel_admin')))
        timeub = datetime.now() + timedelta(hours=3)
        await update_error_link_complaint_unix(user_id=call.from_user.id, time_ub=timeub.timestamp())
    else:
        await call.answer('–í—ã —É–∂–µ –∂–∞–ª–æ–≤–∞–ª–∏—Å—å‚ùå')
